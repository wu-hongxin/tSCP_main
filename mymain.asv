clc,clear,close all;

%% Scene Setup
% Edge List
ELC = [[0 0,1500 0];
    [1500 0,1500 1500];
    [1500 1500,0 1500];
    [0 1500,0 0]];
% Define the Obstacle
%obstacle = [[900 1221,900 1946];];
%% Floor Plan & Camera Parameters
%EL = [ELC;obstacle];
EL = ELC;
%EL = ELC;
x = [20 15];  % 3D Coord [x y ]
cameraParams.pos = x;
cameraParams.yaw = 45;   % direct right as 0 degree (in plane)
cameraParams.fovy = 90;
%cameraParams.aspect_ratio = 1.0;
cameraParams.sight =100; % sight distance可见距离
problem.EL = EL;
problem.step = 50;
problem.sample_lbx = 0;
problem.sample_ubx = 1500;
problem.sample_lby = 0;
problem.sample_uby = 1500;
problem.sample_yawN = 8;
lengthScene = (problem.sample_ubx - problem.sample_lbx)/problem.step + 1;
widthScene = (problem.sample_uby - problem.sample_lby)/problem.step + 1;
problem.size = [lengthScene widthScene];

yawN = problem.sample_yawN;
sample_x = problem.sample_lbx:problem.step:problem.sample_ubx;%Spatial point sampling
sample_y = problem.sample_lby:problem.step:problem.sample_uby;%Spatial point sampling
step_yaw = 360/yawN;
sample_yaw = 0:step_yaw:360;
sample_yaw(end) = [];   % delete 360 element

[SX,SY] = meshgrid(sample_x,sample_y);
SX = reshape(SX,[],1);
SY = reshape(SY,[],1);
m = [SX SY];%253*2
M = [];
for i = 1:length(sample_yaw)
	tmp = sample_yaw(i) * ones(length(m),1);
    tmp = cat(2,m,tmp);
    M = cat(1,M,tmp);
end
%%%边缘解
CandidateCameraConfig = SamplePointsNearEdges1(EL,50,M);%每点代表可用的配置
%%%非边缘解
newstep=100;
sample_x1 = problem.sample_lbx:newstep:problem.sample_ubx;%可使用的点
sample_y1 = problem.sample_lby:newstep:problem.sample_uby;%可使用的点

[SX1,SY1] = meshgrid(sample_x1,sample_y1);
SX1 = reshape(SX1,[],1);
SY1 = reshape(SY1,[],1);
m1 = [SX1 SY1];%253*2


CandidateCameraConfigindex = myComputeOccupancyGrid1(newstep,problem);%每点代表可用的配置
indexnum=0;
for k=1:length(CandidateCameraConfigindex(:,1))
    if CandidateCameraConfigindex(k,1)==1
        indexnum=indexnum+1;
        CandidateCameraConfig0(indexnum,1:2)=m1(k,1:2);
    end
end
shunum=0;
newCandidateCameraConfig0=[];
for ck=1:length(CandidateCameraConfig0(:,1))
    xx=CandidateCameraConfig0(ck,1);
    yy=CandidateCameraConfig0(ck,2);
    flagg=1;
    for ck1=1:length(CandidateCameraConfig(:,1))
        xx1=CandidateCameraConfig(ck1,1);
        yy1=CandidateCameraConfig(ck1,2);
        if xx1==xx & yy1==yy
             flagg=0;
        end
    end
    if flagg==1
       shunum= shunum+1;
       newCandidateCameraConfig0(shunum,1)=CandidateCameraConfig0(ck,1);
       newCandidateCameraConfig0(shunum,2)=CandidateCameraConfig0(ck,2);
    end
    
end

CandidateCameraConfig1=[];
for i = 1:length(sample_yaw)
	tmp1 = sample_yaw(i) * ones(length(newCandidateCameraConfig0),1);
    tmp1 = cat(2,newCandidateCameraConfig0,tmp1);
    CandidateCameraConfig1 = cat(1,CandidateCameraConfig1,tmp1);
end

%%%全部解
finalCandidateCameraConfig=[];
finalCandidateCameraConfig=cat(1,CandidateCameraConfig,CandidateCameraConfig1);
finalCandidateCameraConfig = unique(finalCandidateCameraConfig,'rows');

%% Plot the results

nVar = length(finalCandidateCameraConfig);
samplecoveragestep=50;%覆盖距离可用的点
coveragesample_x = problem.sample_lbx:samplecoveragestep:problem.sample_ubx;
coveragesample_y = problem.sample_lby:samplecoveragestep:problem.sample_uby;
[SX1,SY1] = meshgrid(coveragesample_x,coveragesample_y);
SX1 = reshape(SX1,[],1);
SY1 = reshape(SY1,[],1);
coverageM = [SX1 SY1];
coverageb1 = myComputeOccupancyGrid1(samplecoveragestep,problem);%可覆盖的点
msize=size(coverageb1,1);


%% 事件密度
%% 事件密度
a01=4000;
a02=1500;
a11=813;
a12=28728;
asum=a01+a02+a11+a12
a01=a01/asum;
a02=a02/asum;
a11=a11/asum;
a12=a12/asum;

shijianmidu=computeshijianmidu(coverageM,coverageb1);
numshijianmidu=size(shijianmidu,1);
%% Plot the results

% only choose one config in each position --> Aeq * x' <= beq
cameraPosNum = nVar/(yawN);
degreeOfFreedom = yawN;
Aueq = zeros(cameraPosNum,nVar);
for i=1:cameraPosNum
    for j=1:degreeOfFreedom
        Aueq(i,(i-1)*degreeOfFreedom+j)=1;
    end
end
bueq = ones(cameraPosNum,1);
%% Run GA
tic;
lb = zeros(1,nVar);
ub = ones(1,nVar);
intintices = (1:nVar);
initialx = zeros(1,nVar);

%% 参数和评估函数
options = optimoptions(@ga,                              'InitialPopulationMatrix',initialx, ...
                            'Display','iter', ...
                            'CrossoverFraction',0.75, ...
                            'MaxStallGenerations',50, ...
                            'PopulationSize',1000,...
                            'Generations', 1000);
f = @(x)ourSetCoverageProblem2(x,finalCandidateCameraConfig,problem,cameraParams,coverageb1,shijianmidu,samplecoveragestep);
%% Plot the results
%f(initialx)
[x,fval] = ga(f, nVar, Aueq, bueq, [], [], lb, ub, @AnsConstrains, intintices, options);
toc;
%% Plot the results


ll=0;
cmaxcamera=[];
% Floor Plan & Camera Parameters
probleb = ComputeOccupancyGridfov1(problem);

for i=1:numel(x)
    if x(i)==1
        ll=ll+1;
        cmaxcamera(ll,1:2)= finalCandidateCameraConfig(i,1:2);
        cmaxcamera(ll,3)= finalCandidateCameraConfig(i,3);
        disp(i)
        cameraParams.pos = finalCandidateCameraConfig(i,1:2);
        cameraParams.yaw = finalCandidateCameraConfig(i,3);
        
        disp('Camera parameter')
        disp(cameraParams);

        
        
        % Plot the viewpoint afterwards to avoidance overlapping
        %pos = cameraParams.pos;
        %plot(pos(1),pos(2),'P','Color','r','MarkerSize',5);
        %hold on;
        
        %samplecoveragescoveragefovtep=3;%覆盖距离可用的点
        %coveragesample_x1 = problem.sample_lbx:samplecoveragescoveragefovtep:problem.sample_ubx;
        %coveragesample_y1 = problem.sample_lby:samplecoveragescoveragefovtep:problem.sample_uby;
        %[SX2,SY2] = meshgrid(coveragesample_x1,coveragesample_y1);
        %SX2 = reshape(SX2,[],1);
        %SY2 = reshape(SY2,[],1);
        %coveragefov = [SX2 SY2];
        %B=[];
        %Area3 = PointsInsideVisibilityfov1(problem.EL,cameraParams,coveragefov,cameraParams.sight);             
        %B = cat(2,B,Area3 & probleb);
       % MMsize1=size(Area3,1);
       % for k=1:MMsize1
       %     if B(k,1)==1
       %         plot(coveragefov(k,1),coveragefov(k,2),'.','Color',[0.58,0.8,1],'MarkerSize',1);
       %         hold on;
       %     end
      %  end
       
    end
end
%for aa=1:length(cmaxcamera(:,1))
 %   cameraParams.pos=cmaxcamera(aa,1:2);
 %   cameraParams.yaw=cmaxcamera(aa,3);
  %  pos = cameraParams.pos;

 %   plot(pos(1),pos(2),'P','Color','r','MarkerSize',5);
 %   hold on;         
%end
%axis off;
%axis equal;
%set(gca,'xtick',-10:2:1500);
%set(gca,'ytick',-20:2:2000);
%grid on;
% Outline
%[n,~]=size(ELC);
%for i=1:n
%    line([ELC(i,1),ELC(i,3)],[ELC(i,2),ELC(i,4)] ...
%        ,'LineWidth',2,'color','k');
%end
%hold on;




sample_x = problem.sample_lbx:1:problem.sample_ubx;
sample_y = problem.sample_lby:1:problem.sample_uby;
[SX,SY] = meshgrid(sample_x,sample_y);
SX = reshape(SX,[],1);
SY = reshape(SY,[],1);
M1 = [SX SY];

coveragebb = myComputeOccupancyGrid1(1,problem);%可覆盖的点
%%%输出结果
finallcoerage=computearea1(cmaxcamera,cameraParams,problem,coveragebb);
%disp('覆盖面积为：')
%disp(finallcoerage)
%disp('总覆盖面积为：')
probleb=myComputeOccupancyGrid1(1,problem);
sumaera=sum(probleb,1);
%disp(sumaera)
disp('Area coverage：')
fugailv=finallcoerage/sumaera;
disp(fugailv)
%disp('事件面积：')
shijianmidu1=computeshijianmidu(M1,coveragebb);
shijianresult=computeshijianarea1(cmaxcamera,cameraParams,problem,coveragebb,shijianmidu1);
%disp(shijianresult)
%disp('事件总面积：')
totalshijian=shijianmidu1.*probleb;
totalshijian=sum(totalshijian,1);
%disp(totalshijian)
disp('Target coverage：')
shijianfugailv=shijianresult/totalshijian





